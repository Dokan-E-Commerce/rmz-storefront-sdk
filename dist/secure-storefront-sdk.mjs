var p=(c=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(c,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):c)(function(c){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+c+'" is not supported')});var i=class{static get info(){return this._info||(this._info=this.detect()),this._info}static detect(){let e=typeof process<"u"&&process.versions&&process.versions.node,t=typeof globalThis<"u"&&typeof globalThis.window<"u"&&typeof globalThis.window.document<"u",s=typeof globalThis.importScripts=="function"&&typeof globalThis.navigator<"u",r=!t&&!s,n="unknown";return e?n="node":t?n="browser":s&&(n="webworker"),{isServer:r,isBrowser:t,isWebWorker:s,isNode:!!e,platform:n}}static getEnvVar(e){if(!this.info.isServer){console.warn(`Environment variable access attempted in ${this.info.platform} environment. Use configuration object instead.`);return}if(typeof process<"u"&&process.env)return process.env[e]}static canUseSecureFeatures(){return this.info.isServer||this.info.isBrowser&&typeof globalThis.window<"u"&&globalThis.window.isSecureContext}static getCrypto(){if(this.info.isServer&&typeof p<"u")try{return p("crypto")}catch{return null}return this.info.isBrowser&&typeof globalThis.window<"u"&&globalThis.window.crypto&&globalThis.window.crypto.subtle?globalThis.window.crypto:null}static hasFetch(){return typeof fetch<"u"}static getHttpClient(){if(this.hasFetch())return fetch;if(this.info.isServer)try{return p("node-fetch")}catch{try{return p("axios")}catch{throw new Error("No HTTP client available. Please install node-fetch or axios for Node.js environments.")}}throw new Error("No HTTP client available")}};i._info=null;var g=class{constructor(e){this.config={...e,signatureVersion:e.signatureVersion||"v1",timestampTolerance:e.timestampTolerance||300},this.validateConfig()}setAuthToken(e){this.config.authToken=e||void 0}getAuthToken(){return this.config.authToken}setCartToken(e){this.config.cartToken=e||void 0}getCartToken(){return this.config.cartToken}validateConfig(){if(!this.config.publicKey)throw new Error("Public key is required");if(i.info.isServer&&!this.config.secretKey)throw new Error("Secret key is required for server-side operations");i.info.isBrowser&&this.config.secretKey&&console.warn("Secret key detected in browser environment. This is a security risk!")}async generateSignature(e,t,s,r=""){if(!i.info.isServer)throw new Error("Signature generation is only available server-side");if(!this.config.secretKey)throw new Error("Secret key required for signature generation");let n=i.getCrypto();if(!n)throw new Error("Crypto module not available");let a=[this.config.signatureVersion,e,t.toUpperCase(),s,this.hashString(r,n)].join(`
`),o=n.createHmac("sha256",this.config.secretKey);return o.update(a),o.digest("hex")}async verifySignature(e,t,s,r,n=""){if(!i.info.isServer)throw new Error("Signature verification is only available server-side");let a=Math.floor(Date.now()/1e3),o=parseInt(t);if(Math.abs(a-o)>this.config.timestampTolerance)return!1;try{let u=await this.generateSignature(t,s,r,n);return this.constantTimeCompare(e,u)}catch{return!1}}getAuthHeaders(e,t,s=""){let r=Math.floor(Date.now()/1e3).toString(),n={"X-Public-Key":this.config.publicKey,"X-Timestamp":r,"X-Signature-Version":this.config.signatureVersion};if(this.config.authToken?(n.Authorization=`Bearer ${this.config.authToken}`,console.log("DEBUG: Adding Authorization header:",`Bearer ${this.config.authToken.substring(0,20)}...`)):console.log("DEBUG: No auth token available, skipping Authorization header"),this.config.cartToken&&(n["X-Cart-Token"]=this.config.cartToken,console.log("DEBUG: Adding cart token header:",this.config.cartToken.substring(0,10)+"...")),this.config.secretKey)try{if(i.info.isServer){let a=this.generateSignatureSync(r,e,t,s);n["X-Signature"]=a}else if(i.info.isBrowser){let a=this.generateBrowserSignature(r,e,t,s);n["X-Signature"]=a}}catch(a){console.warn("Failed to generate signature:",a),n["X-Client-Auth"]="true"}else n["X-Client-Auth"]="true";return n}generateSignatureSync(e,t,s,r=""){if(!i.info.isServer||!this.config.secretKey)throw new Error("Synchronous signature generation requires server environment and secret key");let n=i.getCrypto();if(!n)throw new Error("Crypto module not available");let a=[this.config.signatureVersion,e,t.toUpperCase(),s,n.createHash("sha256").update(r).digest("hex")].join(`
`);return n.createHmac("sha256",this.config.secretKey).update(a).digest("hex")}hashString(e,t){return i.info.isServer?t.createHash("sha256").update(e).digest("hex"):e}generateBrowserSignature(e,t,s,r=""){if(!this.config.secretKey)throw new Error("Secret key required for signature generation");let n=this.sha256(r),a=[this.config.signatureVersion,e,t.toUpperCase(),s,n].join(`
`);return this.hmacSha256(a,this.config.secretKey)}sha256(e){return e?p("crypto-js/sha256")(e).toString():"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}hmacSha256(e,t){return p("crypto-js").HmacSHA256(e,t).toString()}constantTimeCompare(e,t){if(e.length!==t.length)return!1;let s=0;for(let r=0;r<e.length;r++)s|=e.charCodeAt(r)^t.charCodeAt(r);return s===0}sanitizeClientData(e){if(Array.isArray(e))return e.map(t=>this.sanitizeClientData(t));if(e&&typeof e=="object"){let t={},s=["password","secret","key","token","api_key","private_key","secret_key","webhook_secret","email_verified_at","remember_token","deleted_at","created_by","updated_by","deleted_by"],r=["session_token","csrf_token","access_token","refresh_token","token"];for(let[n,a]of Object.entries(e)){let o=n.toLowerCase(),u=r.some(y=>o===y);!u&&s.some(y=>o.includes(y)||o.endsWith("_secret")||o.endsWith("_token"))?console.log(`\u{1F6AB} SecurityManager: Filtering out sensitive field: ${n} (isAllowedToken: ${u})`):t[n]=this.sanitizeClientData(a)}return t}return e}generateSecureRandom(e=32){let t=i.getCrypto();if(i.info.isServer&&t)return t.randomBytes(e).toString("hex");if(i.info.isBrowser&&t&&t.getRandomValues){let s=new Uint8Array(e);return t.getRandomValues(s),Array.from(s,r=>r.toString(16).padStart(2,"0")).join("")}return console.warn("Using fallback random generation - not cryptographically secure"),Math.random().toString(36).substring(2)+Date.now().toString(36)}validateResponse(e){return!e||typeof e!="object"||typeof e.success!="boolean"?!1:(e.data!==void 0&&e.data!==null&&(e.data=this.sanitizeClientData(e.data)),!0)}};var d=class{constructor(e,t){this.config={timeout:3e4,maxRetries:3,retryDelay:1e3,headers:{"Content-Type":"application/json",Accept:"application/json"},...e,baseUrl:e.baseUrl||""},this.security=t}async request(e){let t=this.buildUrl(e.url),s=e.data?JSON.stringify(e.data):"",r=this.security.getAuthHeaders(e.method,new URL(t).pathname,s),n={...this.config.headers,...r,...e.headers};i.info.isNode&&(n["User-Agent"]=`StorefrontSDK/1.0 (${i.info.platform})`);let a;for(let o=0;o<=this.config.maxRetries;o++)try{let u=await this.makeRequest({...e,url:t,headers:n},s);if(!this.security.validateResponse(u.data))throw new Error("Invalid response format");return u}catch(u){if(a=u,this.shouldNotRetry(u)||o===this.config.maxRetries)break;await this.delay(this.config.retryDelay*Math.pow(2,o))}throw a}async makeRequest(e,t){let s=e.timeout||this.config.timeout;if(i.info.isBrowser||i.hasFetch())return this.fetchRequest(e,t,s);if(i.info.isNode)return this.nodeRequest(e,t,s);throw new Error("No HTTP client available for this environment")}async fetchRequest(e,t,s){let r=new AbortController,n=setTimeout(()=>r.abort(),s);try{let a={method:e.method,headers:e.headers,signal:r.signal};e.method!=="GET"&&(a.body=t);let o=await fetch(e.url,a);return clearTimeout(n),{data:await this.parseResponse(o),status:o.status,statusText:o.statusText,headers:this.extractHeaders(o.headers)}}catch(a){throw clearTimeout(n),this.normalizeError(a)}}async nodeRequest(e,t,s){let r=i.getHttpClient();if(r.default){let n=r.default;try{let a=await n({method:e.method,url:e.url,data:e.method!=="GET"?JSON.parse(t||"{}"):void 0,headers:e.headers,timeout:s});return{data:a.data,status:a.status,statusText:a.statusText,headers:a.headers}}catch(a){throw this.normalizeError(a)}}else return this.fetchRequest(e,t,s)}async parseResponse(e){let t=e.headers.get("content-type")||"";return t.includes("application/json")?e.json():t.includes("text/")?e.text():e.blob()}extractHeaders(e){let t={};return e instanceof Headers?e.forEach((s,r)=>{t[r]=s}):Object.assign(t,e),t}buildUrl(e){if(e.startsWith("http://")||e.startsWith("https://"))return e;let t=this.config.baseUrl.replace(/\/$/,""),s=e.startsWith("/")?e:`/${e}`;return`${t}${s}`}shouldNotRetry(e){return e.message.includes("4")?!e.message.includes("429"):["ENOTFOUND","ECONNREFUSED","CERT_"].some(s=>e.message.includes(s))}normalizeError(e){return e.response?new Error(`HTTP ${e.response.status}: ${e.response.statusText}`):e.status?new Error(`HTTP ${e.status}: ${e.statusText}`):e instanceof Error?e:new Error(String(e))}delay(e){return new Promise(t=>setTimeout(t,e))}async get(e,t,s){let r=e;if(t&&Object.keys(t).length>0){let n=new URLSearchParams;for(let[o,u]of Object.entries(t))u!=null&&u!==""&&n.append(o,String(u));let a=n.toString();a&&(r+=(e.includes("?")?"&":"?")+a)}return this.request({method:"GET",url:r,headers:s})}async post(e,t,s){return this.request({method:"POST",url:e,data:t,headers:s})}async put(e,t,s){return this.request({method:"PUT",url:e,data:t,headers:s})}async patch(e,t,s){return this.request({method:"PATCH",url:e,data:t,headers:s})}async delete(e,t){return this.request({method:"DELETE",url:e,headers:t})}};var h=class h{constructor(e){this.config={environment:"production",version:"1.0.0",timeout:3e4,maxRetries:3,retryDelay:1e3,enableLogging:!1,...e},this.security=new g({publicKey:this.config.publicKey,secretKey:this.config.secretKey,signatureVersion:"v1",timestampTolerance:300}),this.http=new d({baseUrl:this.config.apiUrl,timeout:this.config.timeout,maxRetries:this.config.maxRetries,retryDelay:this.config.retryDelay},this.security),this.log("SDK initialized",{environment:i.info.platform})}setAuthToken(e){this.security.setAuthToken(e),this.log("Auth token updated",{hasToken:!!e})}getAuthToken(){return this.security.getAuthToken()}setCartToken(e){this.security.setCartToken(e),this.log("Cart token updated",{hasToken:!!e})}getCartToken(){return this.security.getCartToken()}static createInstance(e){let t=`${e.apiUrl}_${e.publicKey}`;return this.instances.has(t)||this.instances.set(t,new h(e)),this.instances.get(t)}get store(){return{get:async e=>(await this.http.get("/store",{"X-Include":e?.include?.join(",")||""})).data.data,getCurrencies:async()=>(await this.http.get("/store/currencies")).data.data,changeCurrency:async e=>{await this.http.post("/store/currency",{symbol:e})},getSettings:async()=>(await this.http.get("/store/settings")).data.data,getFeatures:async()=>(await this.http.get("/store/features")).data.data,getBanners:async()=>(await this.http.get("/store/banners")).data.data}}get products(){return{where:(e,t,s)=>({orderBy:(r,n="asc")=>({limit:a=>({get:async()=>{let o=this.buildProductParams({field:e,operator:t,value:s},r,n,a);return(await this.http.get("/products",o)).data.data}}),get:async()=>{let a=this.buildProductParams({field:e,operator:t,value:s},r,n);return(await this.http.get("/products",a)).data.data}}),get:async()=>{let r=this.buildProductParams({field:e,operator:t,value:s});return(await this.http.get("/products",r)).data.data}}),getAll:async e=>{let t=await this.http.get("/products",e);return{data:t.data.data,pagination:t.data.pagination}},getById:async e=>(await this.http.get(`/products/${e}`)).data.data,getBySlug:async e=>(await this.http.get(`/products/${e}`)).data.data,search:async(e,t)=>{let s=await this.http.get("/products/search",{q:e,...t});return{data:s.data.data,pagination:s.data.pagination}},getFeatured:async(e=8)=>(await this.http.get("/featured-products",{limit:e})).data.data,getRelated:async(e,t=4)=>(await this.http.get(`/products/${e}/related`,{limit:t})).data.data,getReviews:async(e,t)=>{let s=await this.http.get(`/products/${e}/reviews`,t);return{data:s.data.data,pagination:s.data.pagination}}}}get categories(){return{getAll:async()=>(await this.http.get("/categories")).data.data,getById:async e=>(await this.http.get(`/categories/${e}`)).data.data,getBySlug:async e=>(await this.http.get(`/categories/${e}`)).data.data,getProducts:async(e,t)=>{let s=await this.http.get(`/categories/${e}/products`,t);return{data:s.data.data,pagination:s.data.pagination}}}}handleCartResponse(e){return e.cart_token&&this.setCartToken(e.cart_token),e}get cart(){return{get:async()=>{let e=await this.http.get("/cart");return this.handleCartResponse(e.data.data)},addItem:async(e,t=1,s)=>{let r=await this.http.post("/cart/add",{product_id:e,qty:t,...s});return this.handleCartResponse(r.data.data)},updateItem:async(e,t)=>{let s=await this.http.patch(`/cart/items/${e}`,{quantity:t});return this.handleCartResponse(s.data.data)},removeItem:async e=>{let t=await this.http.delete(`/cart/items/${e}`);return this.handleCartResponse(t.data.data)},clear:async()=>{await this.http.delete("/cart/clear"),this.setCartToken(null)},getCount:async()=>{let e=await this.http.get("/cart/count");return e.data.data.cart_token&&this.setCartToken(e.data.data.cart_token),e.data.data.count},applyCoupon:async e=>{let t=await this.http.post("/cart/coupon",{coupon:e});return this.handleCartResponse(t.data.data)},removeCoupon:async()=>{let e=await this.http.delete("/cart/coupon");return this.handleCartResponse(e.data.data)},validate:async()=>(await this.http.get("/cart/validate")).data.data,getSummary:async()=>(await this.http.get("/cart/summary")).data.data}}get auth(){return{startPhoneAuth:async(e,t)=>{let s=await this.http.post("/auth/phone/start",{phone:e,country_code:t});console.log("SecureSDK: startPhoneAuth full response:",s),console.log("SecureSDK: response.data:",s.data),console.log("SecureSDK: response.data.data:",s.data.data);let r=s.data;return console.log("SecureSDK: responseData keys:",Object.keys(r)),console.log("SecureSDK: responseData.data:",r.data),console.log("SecureSDK: responseData.data keys:",r.data?Object.keys(r.data):"undefined"),r.data&&r.data.session_token?(console.log("SecureSDK: Found session_token:",r.data.session_token),{session_token:r.data.session_token}):(console.error("SecureSDK: Could not find session_token in response"),r)},verifyOTP:async(e,t)=>{let s={code:e,session_token:t};console.log("SecureSDK: verifyOTP request body:",s);let r=await this.http.post("/auth/phone/verify",s);return console.log("\u{1F50D} SecureSDK: Raw API response before sanitization:",JSON.stringify(r.data,null,2)),console.log("\u{1F50D} SecureSDK: Extracted data (response.data.data):",JSON.stringify(r.data.data,null,2)),r.data.data},resendOTP:async e=>{let t={session_token:e};console.log("SecureSDK: resendOTP request body:",t),await this.http.post("/auth/phone/resend",t)},completeRegistration:async e=>(await this.http.post("/auth/complete",{firstName:e.firstName,lastName:e.lastName,email:e.email,session_token:e.sessionToken})).data.data,getProfile:async()=>(await this.http.get("/customer/profile")).data.data,updateProfile:async e=>(await this.http.patch("/customer/profile",e)).data.data,logout:async()=>{await this.http.post("/customer/logout")}}}get orders(){return{getAll:async e=>{let t=await this.http.get("/customer/orders",e);return{data:t.data.data,pagination:t.data.pagination}},getById:async e=>(await this.http.get(`/customer/orders/${e}`)).data.data,getCourses:async()=>(await this.http.get("/customer/courses")).data.data}}get checkout(){return{create:async()=>(await this.http.post("/checkout")).data.data,getResult:async e=>(await this.http.get(`/checkout/${e}/result`)).data.data}}get wishlist(){return{get:async()=>(await this.http.get("/wishlist")).data.data,addItem:async e=>{await this.http.post("/wishlist",{product_id:e})},removeItem:async e=>{await this.http.delete(`/wishlist/${e}`)},check:async e=>(await this.http.get(`/wishlist/check/${e}`)).data.data,clear:async()=>{await this.http.delete("/wishlist/clear")}}}get reviews(){return{getAll:async e=>{let t=await this.http.get("/reviews",e);return{data:t.data.data,pagination:t.data.pagination}},getRecent:async(e=6)=>(await this.http.get("/reviews/recent",{limit:e})).data.data,submit:async(e,t)=>(await this.http.post(`/products/${e}/reviews`,t)).data.data,getStats:async()=>(await this.http.get("/reviews/stats")).data.data}}get components(){return{getAll:async()=>(await this.http.get("/components")).data.data,getById:async e=>(await this.http.get(`/components/${e}`)).data.data,getProducts:async(e,t)=>{let s=await this.http.get(`/components/${e}/products`,t);return{data:s.data.data,pagination:s.data.pagination}}}}get pages(){return{getAll:async()=>(await this.http.get("/pages")).data.data,getByUrl:async e=>(await this.http.get(`/pages/${e}`)).data.data}}get courses(){return{getAll:async e=>{let t=await this.http.get("/courses",e);return{data:t.data.data,pagination:t.data.pagination}},getById:async e=>(await this.http.get(`/courses/${e}`)).data.data,getProgress:async e=>(await this.http.get(`/courses/${e}/progress`)).data.data,getModule:async(e,t)=>(await this.http.get(`/courses/${e}/modules/${t}`)).data.data,completeModule:async(e,t)=>(await this.http.post(`/courses/${e}/modules/${t}/complete`)).data.data,getCustomerCourses:async()=>(await this.http.get("/customer/courses")).data.data,getCustomerCourse:async e=>(await this.http.get(`/customer/courses/${e}`)).data.data,getCustomerCourseModule:async(e,t)=>(await this.http.get(`/customer/courses/${e}/modules/${t}`)).data.data}}get management(){return{getAnalytics:async e=>(await this.http.get("/management/analytics",e)).data.data,updateInventory:async e=>(await this.http.post("/management/inventory/update",e)).data.data,getOrders:async e=>{let t=await this.http.get("/management/orders",e);return{data:t.data.data,pagination:t.data.pagination}},exportCustomers:async e=>(await this.http.get("/management/export/customers",e)).data.data,getWebhookData:async e=>(await this.http.get("/management/webhooks/data",e)).data.data}}get customTokens(){return{generateToken:async e=>(await this.http.post("/custom/tokens",e)).data.data,listTokens:async()=>(await this.http.get("/custom/tokens")).data.data,revokeToken:async e=>(await this.http.delete(`/custom/tokens/${e}`)).data.data,getTokenStats:async e=>(await this.http.get(`/custom/tokens/${e}/stats`)).data.data,validateToken:async e=>(await this.http.post("/custom/tokens/validate",{token:e})).data.data,getTokenPermissions:async()=>(await this.http.get("/custom/tokens/permissions")).data.data}}buildProductParams(e,t,s,r){let n={};return e&&(e.field==="featured"&&e.operator==="="&&e.value&&(n.featured=!0),e.field==="category"&&e.operator==="="&&(n.category=e.value),e.field==="price"&&e.operator===">="&&(n.price_min=e.value),e.field==="price"&&e.operator==="<="&&(n.price_max=e.value)),t&&s&&(n.sort=`${t}_${s}`),r&&(n.per_page=r),n}log(e,t){this.config.enableLogging&&console.log(`[StorefrontSDK] ${e}`,t||"")}getInfo(){return{version:this.config.version,environment:i.info,config:{apiUrl:this.config.apiUrl,publicKey:this.config.publicKey,environment:this.config.environment,timeout:this.config.timeout,maxRetries:this.config.maxRetries,enableLogging:this.config.enableLogging}}}async healthCheck(){try{return await this.http.get("/health"),{status:"ok"}}catch(e){return{status:"error",message:e instanceof Error?e.message:"Unknown error"}}}};h.instances=new Map;var l=h;function m(c){return l.createInstance(c)}function _(c){return typeof globalThis<"u"&&globalThis.window&&globalThis.window.React?globalThis.window.React.useMemo(()=>m(c),[c.apiUrl,c.publicKey,c.environment]):m(c)}function x(c){return typeof globalThis<"u"&&globalThis.window&&globalThis.window.Vue?globalThis.window.Vue.computed(()=>m(c)):m(c)}var E=l;export{l as SecureStorefrontSDK,m as createStorefrontSDK,E as default,x as useStorefront,_ as useStorefrontSDK};
//# sourceMappingURL=secure-storefront-sdk.mjs.map